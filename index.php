<?php
/**
 * @link              https://defox.pk
 * @since             1.0.0
 * @package           Wooac
 *
 * @wordpress-plugin
 * Plugin Name:       WooAC
 * Plugin URI:        https://creativebonds.net
 * Description:       This is a short description of what the plugin does. It's displayed in the WordPress admin area.
 * Version:           1.0.0
 * Author:            Muhammad Amjad
 * Author URI:        https://defox.pk
 * License:           GPL-2.0+
 * License URI:       http://www.gnu.org/licenses/gpl-2.0.txt
 * Text Domain:       wooac
 * Domain Path:       /languages
 */

// If this file is called directly, abort.
if ( ! defined( 'WPINC' ) ) {
	die;
}

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class WooACSettings {
	private $wooac_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'wooac_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'wooac_page_init' ) );
	}

	public function wooac_add_plugin_page() {
		add_options_page(
			'WooAC', // page_title
			'WooAC', // menu_title
			'manage_options', // capability
			'wooac', // menu_slug
			array( $this, 'wooac_create_admin_page' ) // function
		);
	}

	public function wooac_create_admin_page() {
		$this->wooac_options = get_option( 'wooac_option_name' ); ?>

		<div class="wrap">
			<h2>WooAC</h2>
			<p>Woocommerce Advancedcare Integration</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'wooac_option_group' );
					do_settings_sections( 'wooac-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function wooac_page_init() {
		register_setting(
			'wooac_option_group', // option_group
			'wooac_option_name', // option_name
			array( $this, 'wooac_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'wooac_setting_section', // id
			'Settings', // title
			array( $this, 'wooac_section_info' ), // callback
			'wooac-admin' // page
		);

		add_settings_field(
			'canada_post_api_0', // id
			'Canada Post API', // title
			array( $this, 'canada_post_api_0_callback' ), // callback
			'wooac-admin', // page
			'wooac_setting_section' // section
		);

		add_settings_field(
			'advancedcare_api_url_1', // id
			'Advancedcare API URL', // title
			array( $this, 'advancedcare_api_url_1_callback' ), // callback
			'wooac-admin', // page
			'wooac_setting_section' // section
		);
	}

	public function wooac_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['canada_post_api_0'] ) ) {
			$sanitary_values['canada_post_api_0'] = sanitize_text_field( $input['canada_post_api_0'] );
		}

		if ( isset( $input['advancedcare_api_url_1'] ) ) {
			$sanitary_values['advancedcare_api_url_1'] = sanitize_text_field( $input['advancedcare_api_url_1'] );
		}

		return $sanitary_values;
	}

	public function wooac_section_info() {
		
	}

	public function canada_post_api_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="wooac_option_name[canada_post_api_0]" id="canada_post_api_0" value="%s">',
			isset( $this->wooac_options['canada_post_api_0'] ) ? esc_attr( $this->wooac_options['canada_post_api_0']) : ''
		);
	}

	public function advancedcare_api_url_1_callback() {
		printf(
			'<input class="regular-text" type="text" name="wooac_option_name[advancedcare_api_url_1]" id="advancedcare_api_url_1" value="%s">',
			isset( $this->wooac_options['advancedcare_api_url_1'] ) ? esc_attr( $this->wooac_options['advancedcare_api_url_1']) : ''
		);
	}

}
if ( is_admin() ){
	$wooac = new WooACSettings();
}


// we need to post data to AC on user register using WooCommerce
function wooac_signup_form(){
    ob_start();
    $customer_id        =     get_current_user_id();
    if($customer_id){
        ?>
<p>You are already logged in.</p>
            <?php
    }
    ?>
        
        <div class="register_page_wrapper">
		<div class="register_form_box">
			<div class="reg_form_container">

				<div class="reg_form_heading">
					<h1>Patient Registration</h1>
					<div class="heading_tab">
						<ul>
							<li class="active"><a href="#" data-id="#step1">1. Patient Registration</a></li>
							<li><a href="#" data-id="#step2">2. Done</a></li>
						</ul>
					</div>
				</div>
				<!-- Form -->
				<div id="step1">
				<form id="registration_form" class="registration_form" name="registration_form" method="POST">
					<!-- Register Type -->
					<div class="reg_type">
						<label>Welcome! Please specify whether you are a patient or caregiver, then fill out the form below to register. *</label>
						<!-- Reg Type Options -->
						<div class="reg_type_options">
							<!-- Reg Type Options -->
							<div class="reg_type_option">
								<label class="radio-container">I am a patient
								  	<input class="select_reg_type" type="radio" name="registration_type" value="patient" data-name='.patient_fields'>
								  	<span class="checkmark"></span>
								</label>
							</div>
							<!-- Reg Type Options -->
							<div class="reg_type_option">
								<label class="radio-container">I am a caregiver 
							  		<input class="select_reg_type" type="radio" name="registration_type" value="caregiver" data-name='.caregiver_fields'>
							  		<span class="checkmark"></span>
								</label>
							</div>
						</div>
					</div>
					<!-- caregiver_fields -->
					<div class="caregiver_fields fields_section">
						<h4>Caregiver Information</h4>
						<!-- Form Row -->
						<div class="form_row have_three_columns">
							<!-- Caregiver  First Name -->
							<div class="form_field">
								<label>First Name <span class="required_icon">*</span></label>
								<input type="text" name="care_giver[first_name]" id="caregiver_first_name" class="is_required">
							</div>
							<!-- Caregiver  Middle Name -->
							<div class="form_field">
								<label>Middle Name <span class="required_icon">*</span></label>
								<input type="text" name="care_giver[middle_name]" id="caregiver_middle_name">
							</div>
							<!-- Caregiver Last Name -->
							<div class="form_field">
								<label>Last Name <span class="required_icon">*</span></label>
								<input type="text" class="is_required"  name="care_giver[last_name]" id="caregiver_last_name">
							</div>
						</div>
						<!-- Form Row -->
						<div class="form_row have_four_columns">
							<!-- Caregiver Dob -->
							<div class="form_field">
								<label>DOB <span class="required_icon">*</span></label>
								<input type="date" class="is_required datechk" name="care_giver[dob_picker]" id="caregiver_dob">
                                <input type="hidden" name="care_giver[dob_day]"  id="caregiver_dob_day"/>
                              	<input type="hidden" name="care_giver[dob_month]"  id="caregiver_dob_month"/>
                              	<input type="hidden" name="care_giver[dob_year]"  id="caregiver_dob_year"/>
                              	<input type="hidden" name="care_giver[dob_format]"  id="caregiver_dob_format"/>
							</div>
							<!-- Caregiver Gender -->
							<div class="form_field">
								<label>Gender <span class="required_icon">*</span></label>
								<!-- Reg Type Options -->
								<div class="reg_type_options">
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Male
										  	<input type="radio" class="is_required" checked="checked" name="care_giver[gender]" value="M">
										  	<span class="checkmark"></span>
										</label>
									</div>
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Female
									  		<input type="radio" class="is_required" name="care_giver[gender]" value="F">
									  		<span class="checkmark"></span>
										</label>
									</div>
								</div>
							</div>
							<!-- Caregiver Mobile Number -->
							<div class="form_field">
								<label>Mobile Number<span class="required_icon">*</span></label>
								<input type="text" class="is_required" name="care_giver[mobile_number]" id="caregiver_primary_phone">
							</div>
							<!-- Email -->
							<div class="form_field">
								<label>Email <span class="required_icon">*</span></label>
								<input type="text" class="is_required email_validate caregiver_email" name="care_giver[email]" id="caregiver_email">
								<div class="field_error_message email_caregiver_error_message"></div>
							</div>
						</div>
					</div>
					<!-- Caregiver Residing Address -->
					<div class="caregiver_fields fields_section">
						<h4>Caregiver Residing Address</h4>
						<!-- form row -->
						<div class="form_row have_two_columns">
							<!-- Address 1 -->
							<div class="form_field">
								<label>Address 1 <span class="required_icon">*</span></label>
								<input type="text" class="is_required address_field" name="care_giver[residing_address][street]" id="careGiverResidingAddressStreet">
								<div class="address_places"></div>
							</div>
							<!-- Address 2 -->
							<div class="form_field">
								<label>Address 2 (Apt, Ste #)</label>
								<input type="text" class="address_field" name="care_giver[residing_address][address_line_2]" id="careGiverResidingAddressAddressLine2">
								<div class="address_places"></div>
							</div>
						</div>
						<!-- Form Row -->
						<div class="form_row have_three_columns">
							<!-- City -->
							<div class="form_field">
								<label>City <span class="required_icon">*</span></label>
								<input type="text" class="is_required city_field" name="care_giver[residing_address][city]" id="careGiverResidingAddressCity">
							</div>
							<!-- Province -->
							<div class="form_field">
								<label>Province <span class="required_icon">*</span></label>
								<select name="care_giver[residing_address][province]" id="careGiverResidingAddressProvince" class="is_required state_field">
									<option value="" selected="selected"></option>
								  	<option label="Alberta" value="Alberta">Alberta</option>
								  	<option label="British Columbia" value="British Columbia">British Columbia</option>
								  	<option label="Manitoba" value="Manitoba">Manitoba</option>
								  	<option label="New Brunswick" value="New Brunswick">New Brunswick</option>
								  	<option label="Newfoundland and Labrador" value="Newfoundland and Labrador">Newfoundland and Labrador</option>
								  	<option label="Northwest Territories" value="Northwest Territories">Northwest Territories</option>
								  	<option label="Nova Scotia" value="Nova Scotia">Nova Scotia</option>
								  	<option label="Nunavut" value="Nunavut">Nunavut</option>
								  	<option label="Ontario" value="Ontario">Ontario</option>
								  	<option label="Prince Edward Island" value="Prince Edward Island">Prince Edward Island</option>
								  	<option label="Quebec" value="Quebec">Quebec</option>
								  	<option label="Saskatchewan" value="Saskatchewan">Saskatchewan</option>
								  	<option label="Yukon" value="Yukon">Yukon</option>
								</select>
							</div>
							<!-- Postal Code -->
							<div class="form_field">
								<label>Postal Code <span class="required_icon">*</span></label>
								<input type="text" class="is_required zip_field" name="care_giver[residing_address][zip]" id="careGiverResidingAddressPostalCode">
							</div>
						</div>
                      	<div class="form_row">
                          	<div class="form_field">
                              <label>Do you reside at the same address as the patient? <span class="required_icon">*</span></label>
                          <div class="reg_type_options">
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Yes
										  	<input type="radio" class="is_required" checked="checked" name="care_giver[resideAtTheSameAddressAsPatient]" value="yes">
										  	<span class="checkmark"></span>
										</label>
									</div>
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">No
									  		<input type="radio" class="is_required" name="care_giver[resideAtTheSameAddressAsPatient]" value="no">
									  		<span class="checkmark"></span>
										</label>
									</div>
								</div>
                          </div>
                      	</div>
					</div>
					<div class="patient_fields caregiver_fields fields_section">
						<!-- Form First Section -->
						<h4>Patient Information</h4>
						<!-- Form Row -->
						<div class="form_row have_three_columns">
							<!-- First Name -->
							<div class="form_field">
								<label>First Name <span class="required_icon">*</span></label>
								<input type="text" class="is_required" name="first_name" id="rx_first_name">
							</div>
							<!-- Middle Name -->
							<div class="form_field">
								<label>Middle Name</label>
								<input type="text" name="middle_name" id="middle_name">
							</div>
							<!-- Last Name -->
							<div class="form_field">
								<label>Last Name <span class="required_icon">*</span></label>
								<input type="text" class="is_required" name="last_name" id="rx_last_name">
							</div>
						</div>
						<!-- Form Row -->
						<div class="form_row have_three_columns">
							<!-- Date Of Birth -->
							<div class="form_field">
								<label>DOB <span class="required_icon">*</span></label>
								<input type="date" class="is_required datechk" name="dob_picker" id="dob">
                              	<input type="hidden" name="dob_day"  id="dob_day"/>
                              	<input type="hidden" name="dob_month"  id="dob_month"/>
                              	<input type="hidden" name="dob_year"  id="dob_year"/>
                              	<input type="hidden" name="dob_format"  id="dob_format"/>
							</div>
							<!-- Gender -->
							<div class="form_field">
								<label>Gender <span class="required_icon">*</span></label>
								<!-- Reg Type Options -->
								<div class="reg_type_options">
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Male
										  	<input type="radio" class="is_required" checked="checked" name="gender" value="M">
										  	<span class="checkmark"></span>
										</label>
									</div>
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Female
									  		<input type="radio" class="is_required" name="gender" value="F">
									  		<span class="checkmark"></span>
										</label>
									</div>
								</div>
							</div>
							<!-- Phone Number -->
							<div class="form_field">
								<label>Phone Number <span class="required_icon">*</span></label>
								<input type="text" class="is_required" name="mobile_number" id="patient_primary_phone">
							</div>
						</div>
						<!-- Form Row -->
						<div class="form_row have_three_columns">
							<!-- Email -->
							<div class="form_field">
								<label>Email <span class="required_icon">*</span></label>
								<input type="text" class="is_required email_validate email_address" name="email" id="email_address">
								<div class="field_error_message email_error_message"></div>
							</div>
							<!-- K Number (Veterans Only) -->
							<div class="form_field">
								<label>K Number (Veterans Only)</label>
								<input type="text" name="veteran_k_number" id="rx_veteran_k_number">
							</div>
						</div>
					</div>

					<div class="patient_fields caregiver_fields fields_section residing_address_area">
						<!-- Residing Address Section -->
						<div class="residing_address_area01">
							<h4 class="residing_address_title">Residing Address</h4>
							<!-- Form Row -->
							<div class="form_row have_two_columns">
								<!-- Address 1 -->
								<div class="form_field">
									<label>Address 1 <span class="required_icon">*</span></label>
									<input type="text" class="is_required address_field" name="residing_address[street]" id="residingAddressStreet">
									<div class="address_places"></div>
								</div>
								<!-- Address 2 -->
								<div class="form_field">
									<label>Address 2 (Apt, Ste #)</label>
									<input type="text" class="address_field" id="residingAddressAddressLine2" name="residing_address[address_line_2]">
									<div class="address_places"></div>
								</div>
							</div>
							<!-- Form Row -->
							<div class="form_row have_three_columns">
								<!-- City -->
								<div class="form_field">
									<label>City <span class="required_icon">*</span></label>
									<input type="text" class="is_required city_field" name="residing_address[city]" id="residingAddressCity">
								</div>
								<!-- Province -->
								<div class="form_field">
									<label>Province <span class="required_icon">*</span></label>
									<select name="residing_address[province]" class="is_required state_field" id="residingAddressProvince">
									
									  	<option value="" selected="selected"></option>
								  	<option label="Alberta" value="Alberta">Alberta</option>
								  	<option label="British Columbia" value="British Columbia">British Columbia</option>
								  	<option label="Manitoba" value="Manitoba">Manitoba</option>
								  	<option label="New Brunswick" value="New Brunswick">New Brunswick</option>
								  	<option label="Newfoundland and Labrador" value="Newfoundland and Labrador">Newfoundland and Labrador</option>
								  	<option label="Northwest Territories" value="Northwest Territories">Northwest Territories</option>
								  	<option label="Nova Scotia" value="Nova Scotia">Nova Scotia</option>
								  	<option label="Nunavut" value="Nunavut">Nunavut</option>
								  	<option label="Ontario" value="Ontario">Ontario</option>
								  	<option label="Prince Edward Island" value="Prince Edward Island">Prince Edward Island</option>
								  	<option label="Quebec" value="Quebec">Quebec</option>
								  	<option label="Saskatchewan" value="Saskatchewan">Saskatchewan</option>
								  	<option label="Yukon" value="Yukon">Yukon</option>
									</select>
								</div>
								<!-- Postal Code -->
								<div class="form_field">
									<label>Postal Code <span class="required_icon">*</span></label>
									<input type="text" class="is_required zip_field" name="residing_address[zip]" id="residingAddressPostalCode">
								</div>
	                           <input type="hidden" name="residing_address[country]" value="Canada" />
							</div>
						</div>
					</div>
	
					<div class="patient_fields caregiver_fields fields_section">
						<!-- Form Row -->
						<h4 class="caregiver_fields fields_section">Shipping Address</h4>
						<div class="form_row have_one_columns">
							<!-- Same Shipping Address -->
							<div class="form_field">
                              <label class="shipping_address_label">Is your shipping address the same as your residing address? <span class="required_icon">*</span></label>
								<!-- Reg Type Options -->
								<div class="reg_type_options">
									<!-- Reg Type Options -->
									<div class="reg_type_option">
                                      <label class="radio-container"><span class="shipping_address_yes">Yes</span>
										  	<input class="is_same_shipping" type="radio" checked="checked" name="shipping_address[isSameResidingAddress]" value="yes">
										  	<span class="checkmark"></span>
										</label>
									</div>
                                  	<div class="reg_type_option patient_address">
                                      <label class="radio-container"><span class="shipping_address_residing">Patient Residing Address</span>
									  		<input class="is_same_shipping" type="radio" name="shipping_address[isSameResidingAddress]" value="patient">
									  		<span class="checkmark"></span>
										</label>
									</div>
									<!-- Reg Type Options -->
									<div class="reg_type_option">
                                      <label class="radio-container"><span class="shipping_address_no">No</span>
									  		<input class="is_same_shipping" type="radio" name="shipping_address[isSameResidingAddress]" value="no">
									  		<span class="checkmark"></span>
										</label>
									</div>
								</div>
							</div>
						</div>
					</div>

					<div class="patient_fields caregiver_fields fields_section">
						<!-- Shipping Address Section -->
						<div class="additional_shipping_address">
							<h4 class="patient_fields fields_section">Shipping Address</h4>
							<!-- Form Row -->
							<div class="form_row have_two_columns">
								<!-- Address 1 -->
								<div class="form_field">
									<label>Address 1 <span class="required_icon">*</span></label>
									<input type="text" class="is_required address_field" name="shipping_address[street]" id="shippingAddressStreet">
									<div class="address_places"></div>
								</div>
								<!-- Address 2 -->
								<div class="form_field">
									<label>Address 2 (Apt, Ste #)</label>
									<input type="text" class="address_field" name="shipping_address[address_line_2]" id="shippingAddressAddressLine2">
									<div class="address_places"></div>
								</div>
							</div>
							<!-- Form Row -->
							<div class="form_row have_three_columns">
								<!-- City -->
								<div class="form_field">
									<label>City <span class="required_icon">*</span></label>
									<input type="text" class="is_required city_field" name="shipping_address[city]" id="shippingAddressCity">
								</div>
								<!-- Province -->
								<div class="form_field">
									<label>Province <span class="required_icon">*</span></label>
									<select name="shipping_address[country]" class="is_required state_field" id="shippingAddressProvince">
										<option value="" selected="selected"></option>
									
								  	<option label="Alberta" value="Alberta">Alberta</option>
								  	<option label="British Columbia" value="British Columbia">British Columbia</option>
								  	<option label="Manitoba" value="Manitoba">Manitoba</option>
								  	<option label="New Brunswick" value="New Brunswick">New Brunswick</option>
								  	<option label="Newfoundland and Labrador" value="Newfoundland and Labrador">Newfoundland and Labrador</option>
								  	<option label="Northwest Territories" value="Northwest Territories">Northwest Territories</option>
								  	<option label="Nova Scotia" value="Nova Scotia">Nova Scotia</option>
								  	<option label="Nunavut" value="Nunavut">Nunavut</option>
								  	<option label="Ontario" value="Ontario">Ontario</option>
								  	<option label="Prince Edward Island" value="Prince Edward Island">Prince Edward Island</option>
								  	<option label="Quebec" value="Quebec">Quebec</option>
								  	<option label="Saskatchewan" value="Saskatchewan">Saskatchewan</option>
								  	<option label="Yukon" value="Yukon">Yukon</option>
									</select>
								</div>
								<!-- Postal Code -->
								<div class="form_field">
									<label>Postal Code <span class="required_icon">*</span></label>
									<input type="text" class="is_required zip_field" name="shipping_address[zip]" id="shippingAddressPostalCode">
								</div>
							</div>
						</div>
					</div>
					<div class="patient_fields caregiver_fields fields_section">
						<!-- Form Row -->
						<div class="form_row have_one_columns">
							<!-- Private Residence -->
							<div class="form_field">
								<label> Is this shipping address a private residence? <span class="required_icon">*</span></label>
								<!-- Reg Type Options -->
								<div class="reg_type_options">
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">Yes
										  	<input class="is_residence" type="radio" checked="checked" name="shipping_address[privateResidence]" value="yes">
										  	<span class="checkmark"></span>
										</label>
									</div>
									<!-- Reg Type Options -->
									<div class="reg_type_option">
										<label class="radio-container">No
									  		<input class="is_residence" type="radio" name="shipping_address[privateResidence]" value="no">
									  		<span class="checkmark"></span>
										</label>
									</div>
								</div>
							</div>
						</div>
						<!-- Establishment Name -->
						<div class="establishment_field">
							<div class="form_row have_one_columns">
								<div class="form_field">
									<label>Establishment Name <span class="required_icon">*</span></label>
									<input type="text" class="is_required" name="shipping_address[establishmentName]" id="establishmentName">
								</div>
							</div>
						</div>
					</div>
                  
					<div class="patient_fields caregiver_fields fields_section">
						<!-- Form Signature Sec -->
						<h4>Signature</h4>
						<div class="form_row have_two_columns">
							<!-- Signature Field -->
							<div class="form_field">
								<label>Signature</label>
								<div class="form_signature">
                                  <div class="signdiv">
									<canvas class="pad" id="signpad"></canvas>
                                  </div>
									<fieldset class="clear_signature">
										<input type="button" value="Clear" id="sign_clear">
									</fieldset>
                                  <textarea style="display:none" name="signatures[patient][signature_dataurl]" id="signature_dataurl"></textarea>
								</div>
							</div>
						</div>
						<!-- Date -->
						<div class="form_row have_two_columns">
							<!-- Date -->
							<div class="form_field">
								<label>Date (MM/DD/YYYY)</label>
								<input type="date" name="signatures[patient][date]" id="patientSignatureDate">
                              	
                              
							</div>
						</div>
						<!-- Form Submit Button -->
                      <input type="hidden" value="1" name="isSubmitting" />
						<div class="form_btn">
							<button id="reg_form_submit">Submit</button>
						</div>
					</div>

					<div id="patient_output" class="reg_type_option_output">
					
					</div>
					<!-- caregiver Out Put -->
					<div id="caregiver_output" class="reg_type_option_output">
						
					</div>
					
				</form>
				</div>
				<div id="step2">
					<h4 class="success_message">Thank you for your submission!</h4>
					<p class="success_message_text">We've received your registration information. We will get back to you soon.</p>
				</div>
			</div>
		</div>
	</div>
<style>
	.address_places {
	    position: absolute;
	    background-color: #fff;
	    width: calc(100% - 30px);
	    max-height: 200px;
	    overflow-y: scroll;
	    bottom: 56px;
	    box-shadow: 0 0 5px 0 #0000004f;
	    padding: 10px;
	    left: 15px;
	    visibility: hidden;
	    opacity: 0;
	}
	.address_places.show{
		visibility: visible;
		opacity: 1;
	}
	.address_places p {
	    margin: 0;
		font-size: 12px;
		color: #4a4949;
		font-weight: 300;
		padding: 5px;
		cursor: pointer;
		transition: 0.3s;
	}
	.address_places p span {
	    font-size: 10px;
	    margin-left: 15px;
	    color: gray;
	}
	.address_places p:hover{
		background-color: #f5f5f5;
	}
	#step2{
		display: none;
	}
.success_message{
	color: #000000;
	font-size: 20px;
	margin: 0 0 10px;
	text-align: center;
	font-weight: 600;
	line-height: 1.6;
}
.success_message_text{
	font-size: 13px;
	font-weight: 600;
	display: block;
	max-width: 100%;
	margin-bottom: 5px;
	color: #404040;
	line-height: 1.6;
	text-align: center;
}
.register_form_box{
	background-color: #fff;
	padding: 30px;
}
.reg_form_container {
    max-width: 991px;
    margin: 0 auto;
}
.reg_form_header {
    display: flex;
    justify-content: space-between;
}
.reg_form_logo img {
    max-width: 300px;
}
.reg_form_phone p {
    font-size: 20px;
    color: #000000;
    margin: 0;
}
/******	FORM HEADING
************************/
.reg_form_heading h1 {
    margin: 0 0 20px;
    text-align: center;
    color: #000000;
    font-size: 28px;
    font-weight: 600;
    line-height: 1.2;
    text-transform: uppercase;
}
.heading_tab ul {
    margin: 0;
    padding: 0;
    text-align: center;
    display: flex;
    justify-content: center;
    align-items: flex-end;
}
.heading_tab ul li {
    list-style: none;
    display: inline-block;
    width: 33.333%;
}
.heading_tab ul li a{
	color: #404040;
	text-align: center;
	line-height: 1.6;
	text-decoration: none !important;
	text-transform: uppercase;
}
.heading_tab ul li a::after {
    content: '';
    width: 100%;
    height: 10px;
    position: relative;
    display: block;
    background-color: #bdbdbd;
    margin-top: 5px;
}
.heading_tab ul li:first-child a::after{
	border-radius: 50px 0px 0 50px;
}
.heading_tab ul li:last-child a::after{
	border-radius: 0px 50px 50px 0px;
}
.heading_tab ul li.active a::after{
	background-color: #000000;
}
.heading_tab ul li.active a{
	color: #000000;
}
.reg_form_heading {
    margin-bottom: 20px;
}
/********	FORM
**********************************/
.registration_form label{
	font-size: 13px;
	font-weight: 600;
	display: inline-block;
	max-width: 100%;
	margin-bottom: 5px;
	color: #404040;
	line-height: 1.6;
}
/****** REG TYPE
*******************/
.reg_type_options {
    display: flex;
    flex-wrap: wrap;
}
.reg_type_option {
	margin: 7px 10px 7px 0;
    display: flex;
    align-items: center;
}
.reg_type_option input{
	margin: 0 5px 0 0;
}
.registration_form .reg_type_option label{
	font-weight: 400;
	cursor: pointer;
	margin: 0;
}
/**** RADIO BUTTON
*********************/
/* The radio-container */
.radio-container {
  display: block;
  position: relative;
  padding-left: 30px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 22px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.radio-container input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark {
  	position: absolute;
	top: 0;
	left: 0;
	height: 20px;
	width: 20px;
	background-color: #fff;
	border: 1px solid #ddd;
	border-radius: 50%;
}

/* On mouse-over, add a grey background color */
.radio-container:hover input ~ .checkmark {
  background-color: transparent;
}

/* When the radio button is checked, add a blue background */
.radio-container input:checked ~ .checkmark {
    background-color: transparent;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.radio-container input:checked ~ .checkmark:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.radio-container .checkmark::after {
    top: 2px;
    left: 2px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: #000000;
}
.reg_type{
	margin-bottom: 20px;
}
/******** Form Sec Heading
******************************/
.registration_form h4{
	color: #000000;
	font-size: 20px;
	margin:0 0 10px;
	text-align: center;
	font-weight: 600;
	line-height: 1.6;
	text-transform: uppercase;
}
.form_row {
    display: flex;
    margin: 0 -15px;
    align-items: flex-start;
}
.field_error_message {
    color: #ff0000ad;
    font-size: 12px;
    position: relative;
    top: -10px;
    font-style: italic;
    letter-spacing: 0.5px;
}
.form_row.have_four_columns .form_field{
	/*width: calc(25% - 30px);*/
	width: 25%;
}
.form_row.have_three_columns .form_field{
	/*width: calc(33.333% - 30px);*/
	width: 33.333%;
}
.form_row.have_two_columns .form_field{
	/*width: calc(50% - 30px);*/
	width: 50%;
}
.form_row.have_one_columns .form_field{
	/*width: calc(100% - 30px);*/
	width: 100%;
}
.form_field{
	padding: 0 15px;
	display: flex;
	flex-wrap: wrap;
	margin-bottom: 20px;
	position: relative;
}
.form_field label {
    display: block;
    width: 100%;
    font-size: 14px;
    color: dimgray;
	font-weight: 400;
	font-family: Poppins, sans-serif;
	font-style: normal;

}
.form_field input,
.form_field select{
	color: dimgray;
	border: 1px solid #e6e6e6;
	border-radius: 0px;
	-webkit-box-shadow: none;
	box-shadow: none;
	transition: all .15s ease-out;
	width: 100%;
	padding: 8px 12px;
	background-color: #fff;
	font-size: 14px;
	line-height: 1.6;
	display: block;
	outline: none;
	background-color: #f7f7f7;
	border: 0;
	border: 1px solid #f7f7f7;
}
.form_field input:focus,
.form_field select:focus{
	border-color: #a6a4a4;
}
.form_field input::placeholder{
	opacity: 0.5;
}
.required_icon {
    color: red;
}
.form_btn button {
    background: #000000;
    color: #fff;
    border-color: #000000;
    border: 1px solid #000000;
    min-width: unset;
    font-weight: 600;
    transition: all .15s ease-out;
    border-radius: 0px;
    padding: 6px 20px;
    line-height: 1.6;
    display: inline-block;
    margin-bottom: 0;
    text-align: center;
    vertical-align: middle;
    cursor: pointer;
    text-transform: uppercase;
    font-weight: 400;
    letter-spacing: 1px;
    font-size: 14px;
    transition: 0.3s;
    border: 2px solid transparent;
    min-width: 130px;
    height: 50px;
}
.form_btn button:hover{
	/*color: #000000;*/
	background-color: #c61932;
	border-color: #c61932;
}
.form_btn {
    text-align: center;
}
/*****	SIGNATURE
***********************/
#signature-pad {
    min-height: 235px;
    width: 100% !important;
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    height: 350px;
}
.drawpad .drawpad-toolbox{
	display: none;
}
.reg_type_option_output{
	display: none;
}
.additional_shipping_address{
	display: none;
}
.establishment_field {
    display: none;
}
.fields_section{
	display: none;
}
.is_required.is_error {
    border-color: #e3070757;
    box-shadow: 0 0 3px 0 #ff00004a;
}

.clear_signature {
    padding: 0;
    border: 0;
    max-width: 180px;
    cursor: pointer;
}
.clear_signature input{
	cursor: pointer;
}
  
.form_signature .signdiv{
  border:1px solid #ccc;
  margin-bottom: 10px;
}
  #signpad {
  width:300px;
  height:200px;
    
}
.reg_type_option input {
    display: inline-block;
}

</style>
<?php
$wooac_option_name = get_option('wooac_option_name');
?>
<script src="https://szimek.github.io/signature_pad/js/signature_pad.umd.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>
<link rel="stylesheet" type="text/css" href="https://ws1.postescanada-canadapost.ca/css/addresscomplete-2.30.min.css?key=<?=$wooac_option_name['canada_post_api_0']?>" />
    <script type="text/javascript" src="https://ws1.postescanada-canadapost.ca/js/addresscomplete-2.30.js?key=<?=$wooac_option_name['canada_post_api_0']?>&culture=en"></script>
<script>
!function(E,t,e){"use strict";var r=function(){if(!(this instanceof r)){var e=new r;return e.init.call(e,Array.prototype.slice.call(arguments))}var o,n=null,l={includeEmptyValuedElements:!1,w3cSuccessfulControlsOnly:!1},i=/[^\[\]]+|\[\]/g,a=null;function f(e){if(e&&"object"==typeof e)return Object.keys(e).filter(function(e){return!isNaN(parseInt(e,10))}).splice(-1)[0]}function c(e){var n=f(e);return"string"==typeof n?parseInt(n,10)+1:0}function s(e){if("object"!=typeof e||null===e)return 0;var n,t=0;if("function"==typeof Object.keys)t=Object.keys(e).length;else for(n in e)e.hasOwnProperty(n)&&t++;return t}function p(e){return"INPUT"===e.nodeName&&"radio"===e.type}function v(e){return"INPUT"===e.nodeName&&"checkbox"===e.type}function d(e){return"SELECT"===e.nodeName&&"select-multiple"===e.type}function y(e){return e.checked}function m(e){if(p(e))return!!y(e)&&e.value;if(v(e))return!!y(e)&&e.value;if("INPUT"===(t=e).nodeName&&"file"===t.type)return!(!a.enctype||"multipart/form-data"!==a.enctype)&&(n=e,E.FileList&&n.files instanceof E.FileList&&0<e.files.length?e.files:!(!e.value||""===e.value)&&e.value);var n,t,r,u;if("TEXTAREA"===e.nodeName)return!(!e.value||""===e.value)&&e.value;if("SELECT"===(r=e).nodeName&&"select-one"===r.type)return e.value&&""!==e.value?e.value:!(!e.options||!e.options.length||""===e.options[0].value)&&e.options[0].value;if(d(e)){if(e.options&&0<e.options.length){var i=[];return function(e,n){if([].forEach)return[].forEach.call(e,n);var t;for(t=0;t<e.length;t++)n.call(e,e[t],t)}(e.options,function(e){e.selected&&i.push(e.value)}),l.includeEmptyValuedElements?i:!!i.length&&i}return!1}return"BUTTON"===(u=e).nodeName&&"submit"===u.type?e.value&&""!==e.value?e.value:!(!e.innerText||""===e.innerText)&&e.innerText:void 0!==e.value&&(l.includeEmptyValuedElements?e.value:""!==e.value&&e.value)}function h(e,n,t,r){var u,i=n[0];if(p(e))return!1!==t?r[i]=t:void 0;if(v(e)){if(!1===t)return;if(u=e.name,1<Array.prototype.filter.call(o,function(e){return e.name===u}).length)return r[i]||(r[i]=[]),r[i].push(t);r[i]=t}if(d(e)){if(!1===t)return;r[i]=t}return r[i]=t}function g(e,n,t,r){var u,i,o=n[0];return 1<n.length?"[]"===o?(r[c(r)]={},g(e,n.splice(1,n.length),t,r[(u=r,i=f(u),"string"==typeof i?parseInt(i,10):0)])):(r[o]&&0<s(r[o])||(r[o]={}),g(e,n.splice(1,n.length),t,r[o])):1===n.length?("[]"===o?r[c(r)]=t:h(e,n,t,r),r):void 0}return{init:function(e){return!(!e||"object"!=typeof e||!e[0])&&(n=e[0],void 0!==e[1]&&0<s(e[1])&&function(e,n){var t;for(t in n)n.hasOwnProperty(t)&&(e[t]=n[t])}(l,e[1]),!!function(){switch(typeof n){case"string":a=t.getElementById(n);break;case"object":(e=n)&&"object"==typeof e&&"nodeType"in e&&1===e.nodeType&&(a=n)}var e;return a}()&&!!(o=a.querySelectorAll("input, textarea, select")).length&&function(){var e,n,t,r=0,u={};for(r=0;r<o.length;r++)!(n=o[r]).name||""===n.name||n.disabled||p(n)&&!y(n)||(!1!==(t=m(n))||l.includeEmptyValuedElements)&&(1===(e=n.name.match(i)).length&&h(n,e,t||"",u),1<e.length&&g(n,e,t||"",u));return 0<s(u)&&u}())}}};"function"==typeof define&&define.amd?define(function(){return r}):"object"==typeof module&&module.exports?module.exports=r:E.formToObject=r}(window,document);
(function($) {
$(document).ready(function(){
  
  var dateClass='.datechk';
$(document).ready(function ()
{
  if (document.querySelector(dateClass).type !== 'date')
  {
    var oCSS = document.createElement('link');
    oCSS.type='text/css'; oCSS.rel='stylesheet';
    oCSS.href='//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/base/jquery-ui.css';
    oCSS.onload=function()
    {
      var oJS = document.createElement('script');
      oJS.type='text/javascript';
      oJS.src='//ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js';
      oJS.onload=function()
      {
        $(dateClass).datepicker();
      }
      document.body.appendChild(oJS);
    }
    document.body.appendChild(oCSS);
  }
});
  
 var signaturePad = new SignaturePad(document.getElementById('signpad'), {
  backgroundColor: 'rgba(255, 255, 255, 0)',
  penColor: 'rgb(0, 0, 0)'
});
  
  $('#sign_clear').on('click',function(){
  	signaturePad.clear();
  });



   	// Email Address
  	$('input[name=email]').on('input', function() { 
  		var pattern = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
  		var email_field = $(this);
  		var email = $(this).val();

  		if ( this.value.trim() !== '' ) {
        	if(!pattern.test(this.value.trim())){
        		$(this).addClass('is_error');
              	errors = true;
        	}else{
        		$.ajax({
		          	type: 'GET',
		          	url: 'https://<?=$wooac_option_name['advancedcare_api_url_1']?>/api/sign/up/1?email='+ email +'',
		          	data: '', 
		          	dataType: 'json',
		          	contentType: 'application/json',
		          	success: function(response) { 
			          	if(response['found'] == true){
			          		$(email_field).addClass('is_error');
			          		$('.email_error_message').html('Email Already Registerd.');
              				errors = true;
			          	}else{
			          		//console.log('not found found!');
			          		$(email_field).removeClass('is_error');
			          		$('.email_error_message').html('');
              				errors = false;
			          	}
		          	},
		        });
        	}
        }else{
	    	$(this).addClass('is_error');
          	errors = true;
	    }
	});


	//email_caregiver_error_message Email Address
  	$('.caregiver_email').on('input', function() { 
  		var pattern = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
  		var email_field = $(this);
  		var email = $(this).val();

  		if ( this.value.trim() !== '' ) {
        	if(!pattern.test(this.value.trim())){
        		$(this).addClass('is_error');
              	errors = true;
        	}else{
        		$.ajax({
		          	type: 'GET',
		          	url: 'https://<?=$wooac_option_name['advancedcare_api_url_1']?>/api/sign/up/1?email='+ email +'',
		          	data: '', 
		          	dataType: 'json',
		          	contentType: 'application/json',
		          	success: function(response) { 
			          	if(response['found'] == true){
			          		$(email_field).addClass('is_error');
			          		$('.email_caregiver_error_message').html('Email Already Registerd.');
              				errors = true;
			          	}else{
			          	//	console.log('not found found!');
			          		$(email_field).removeClass('is_error');
			          		$('.email_caregiver_error_message').html('');
              				errors = false;
			          	}
		          	},
		        });
        	}
        }else{
	    	$(this).addClass('is_error');
          	errors = true;
	    }
	});

	$('.fields_section').on('click', function(){
		$('.fields_section').removeClass('current');
		$(this).addClass('current');
	});
	  var  states = {
  "AB": "Alberta",
  "BC": "British Columbia",
  "MB": "Manitoba",
  "NB": "New Brunswick",
  "NL": "Newfoundland and Labrador",
  "NS": "Nova Scotia",
  "NT": "Northwest Territories",
  "NU": "Nunavut",
  "ON": "Ontario",
  "PE": "Prince Edward Island",
  "QC": "Qu�bec",
  "SK": "Saskatchewan",
  "YT": "Yukon"
}

   
   var fields = [   
        { element: "residingAddressStreet", field: "", mode: pca.fieldMode.SEARCH }, 
 
        { element: "residingAddressStreet", field: "Line1", mode: pca.fieldMode.POPULATE },   
        { element: "residingAddressStreet2", field: "Line2", mode: pca.fieldMode.POPULATE },   
        { element: "residingAddressCity", field: "City", mode: pca.fieldMode.POPULATE },   
        { element: "residingAddressProvince", field: "ProvinceName", mode: pca.fieldMode.POPULATE },   
        { element: "residingAddressPostalCode", field: "PostalCode", mode: pca.fieldMode.POPULATE },   
        
  ];
       var options = {
         key:'<?=$wooac_option_name['canada_post_api_0']?>',
     bar:{
     showCountry : false,          
     showLogo : false,          
     logoLink : false      
     }
       };
    var residingaddress = new pca.Address(fields, options); 
     
     var sfields = [   
        { element: "shippingAddressStreet", field: "", mode: pca.fieldMode.SEARCH }, 
 
        { element: "shippingAddressStreet", field: "Line1", mode: pca.fieldMode.POPULATE },   
        { element: "shippingAddressStreet2", field: "Line2", mode: pca.fieldMode.POPULATE },   
        { element: "shippingAddressCity", field: "City", mode: pca.fieldMode.POPULATE },   
        { element: "shippingAddressProvince", field: "ProvinceName", mode: pca.fieldMode.POPULATE },   
        { element: "shippingAddressPostalCode", field: "PostalCode", mode: pca.fieldMode.POPULATE },   
        
  ];
   
    var shippingaddress = new pca.Address(sfields, options); 
     
  var careGiverfields = [   
        { element: "careGiverResidingAddressStreet", field: "", mode: pca.fieldMode.SEARCH }, 
 
        { element: "careGiverResidingAddressStreet", field: "Line1", mode: pca.fieldMode.POPULATE },   
        { element: "careGiverResidingAddressStreet2", field: "Line2", mode: pca.fieldMode.POPULATE },   
        { element: "careGiverResidingAddressCity", field: "City", mode: pca.fieldMode.POPULATE },   
        { element: "careGiverResidingAddressProvince", field: "ProvinceName", mode: pca.fieldMode.POPULATE },   
        { element: "careGiverResidingAddressPostalCode", field: "PostalCode", mode: pca.fieldMode.POPULATE },   
        
  ];
   
    var careGiveraddress = new pca.Address(careGiverfields, options); 
     
     
    
  
	$('.select_reg_type').on('click',function(){
        var targetBox = $(this).attr("data-name");
        $('.fields_section').hide();
        $('.fields_section').removeClass('visible');
        $(targetBox).show();
        $(targetBox).addClass('visible');
      	// $('.residing_address_area').hide();
      	$('.patient_address').hide();
      if(targetBox=='.caregiver_fields'){
      	$('.shipping_address_label').html('Please select one of the following options as your shipping address');
      	$('.shipping_address_yes').html('Caregiver Residing Address');
        $('.shipping_address_yes').parent().find('input').val('caregiver');
      	$('.shipping_address_no').html('Add New Address');    
        $('.shipping_address_no').parent().find('input').val('new');
        $('.residing_address_title').html('Patient Residing Address');
        $('.patient_address').show();
        $('.residing_address_area').hide();
        var chk = $('input[name="care_giver[resideAtTheSameAddressAsPatient]"]:checked').val();
        if(chk=='no'){
        	$('.residing_address_area').show();
        }
      }else{
      	$('.shipping_address_label').html('Is your shipping address the same as your residing address?');
      	$('.shipping_address_yes').html('Yes');
        $('.shipping_address_yes').parent().find('input').val('yes');
      	$('.shipping_address_no').html('No');
        $('.shipping_address_no').parent().find('input').val('no');
        $('.residing_address_title').html('Residing Address');
        $('.patient_address').hide();
      }
    });
  $('input[name="care_giver[resideAtTheSameAddressAsPatient]"]').on('change',function(){
   // console.log('yes');
  	var chk = $('input[name="care_giver[resideAtTheSameAddressAsPatient]"]:checked').val();
        if(chk=='no'){
        	$('.residing_address_area').show();
        }else{
        	$('.residing_address_area').hide();
        }
  });
  $('.select_reg_type:checked').trigger('click');
	$('.is_same_shipping').click(function(){
        var targetBox = $(this).attr("value");
        if(targetBox == 'no'  || targetBox == 'new'){
        	$('.additional_shipping_address').show();
        }else{
        	$('.additional_shipping_address').hide();
        }
    });


    $('.is_residence').click(function(){
        var targetBox = $(this).attr("value");
        if(targetBox == 'no'){
        	$('.establishment_field').show();
        }else{
        	$('.establishment_field').hide();
        }
    });

    $('#dob').on('change',function(){
		var v = new Date($(this).val());
        v.setHours(v.getHours() + v.getTimezoneOffset()/60);
    
      	$('#dob_year').val(v.getFullYear());
      	$('#dob_month').val(v.getMonth()+1);
      	$('#dob_day').val(v.getDate());
      	$('#dob_format').val(v.toISOString());
      	
    })
    
    $('#caregiver_dob').on('change',function(){
		var v = new Date($(this).val());
    	v.setHours(v.getHours() + v.getTimezoneOffset()/60);
    
      	$('#caregiver_dob_year').val(v.getFullYear());
      	$('#caregiver_dob_month').val(v.getMonth()+1);
      	$('#caregiver_dob_day').val(v.getDate());
      	$('#caregiver_dob_format').val(v.toISOString());
      	
    })
    // Forms Submit


    $('.is_required').on('click', function(){
    	$(this).removeClass('is_error');
    });




    $( "#registration_form" ).submit(function(e) {
    	// Check Required Fields
      	$('.visible .is_required').each(function() {
          $(this).removeClass('is_error');
        });

        var errors = false;

        $('.is_required:visible').each(function(){
        	if ( this.value.trim() !== '' ) {
            	$(this).removeClass('is_error');
            	errors = false;
		    }else{
		    	$(this).addClass('is_error');
		    	errors = true;
		    }
        });

      //  	$('.visible .is_required').each(function() {
      //       if ( this.value.trim() !== '' ) {
      //       	$(this).removeClass('is_error');
      //       	errors = false;
		    // }else{
		    // 	$(this).addClass('is_error');
		    // 	errors = true;
		    // }
      //   });

		
	  	$('.fields_section:not(.additional_shipping_address) .visible .is_required').each(function() {
            if ( this.value.trim() !== '' ) {
            	$(this).removeClass('is_error');
		    }else{
		    	$(this).addClass('is_error');
		    	errors = true;
		    }
        });
      	
      	var is_same_shipping = $('.is_same_shipping:checked').val();
		//console.log(is_same_shipping);
        if(is_same_shipping=='no'){
			$('.additional_shipping_address .visible .is_required').each(function() {
              if ( this.value.trim() !== '' ) {
                  $(this).removeClass('is_error');
              }else{
                  $(this).addClass('is_error');
                  errors = true;
              }
            })
        }
      
      //   $('.visible .email_validate').each(function() {
      //   	var pattern = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i
      //       if ( this.value.trim() !== '' ) {
      //       	if(!pattern.test(this.value.trim())){
      //       		$(this).addClass('is_error');
      //             	errors = true;
      //       	}else{
      //       		$(this).removeClass('is_error');
      //       	}
		    // }else{
		    // 	$(this).addClass('is_error');
      //         	errors = true;
		    	
		    // }
      //   });

        

        // $('#email_address').on('click', function(){
        // 	alert('abc');
        // 	var email = $(this).val();
        // 	$.ajax({
	       //    type: 'POST',
	       //    url: 'https://tcs.advancedcare.com/api/public/v1/mdhub/register',
	       //    data: {email: email}, 
	       //    dataType: 'json',
	       //    contentType: 'application/json',
	       //    success: function(response) { 
	       //    	if(response['s'] == 'f'){
	       //    		if(response['m'] == 'e_email_registered'){
	       //    			alert('Email Already Registerd.');
	       //    		}else{
	       //    			alert(response['m']);
	       //    		}
	       //    	}else{
	       //    		$('#step1').hide();
	       //    		$('#step2').show();
	       //    		$('.heading_tab ul li').addClass('active');
	       //    	}
	       //    },
	       //  });
        // });



	//console.log(errors);
      if(!errors){
        $('#signature_dataurl').val(signaturePad.toDataURL());
      	var fields = $('.visible input');
        var data = $('#registration_form').serialize();
        /*var data = [];
        $(fields).each(function(i,v){
          //	if($(v).type=='radio' || $(v).type=='checkbox'){
          //    if($(v).is(':checked')){
          //      data.push({
           //       $(v).attr('name'):$(v).val()
           //     })
           //   }
           // }else{
          		var name = $(v).attr('name');
          		var val = $(v).val();
          data.push({"'"+name+"'":val})
           // }
        });*/
        //console.log(formToObject('registration_form'));
        
        
        $.ajax({
          type: 'POST',
          url: 'https://<?=$wooac_option_name['advancedcare_api_url_1']?>/api/public/v1/mdhub/register',
          data: JSON.stringify(formToObject('registration_form')), 
          dataType: 'json',
          contentType: 'application/json',
          success: function(response) { 
           
            if(jQuery.isEmptyObject(response)){
            	alert('Required data is missing. Please recheck and resubmit the form');
            }else{
          	if(response['s'] == 'f'){
          		if(response['m'] == 'e_email_registered'){
          			alert('Email Already Registerd.');
          		}else{
          			alert(response['m']);
          		}
          	}else{
          		$('#step1').hide();
          		$('#step2').show();
          		$('.heading_tab ul li').addClass('active');
          	}
          	// console.log(response['s']);
          	// console.log(response['m']);
          	// console.log(response)
            }
          },
        });
        
      }
	  	return false;
	});
function getFormData($form){
    var unindexed_array = $form.serializeArray();
    var indexed_array = {};

    $.map(unindexed_array, function(n, i){
        indexed_array[n['name']] = n['value'];
    });

    return indexed_array;
}

});
  
    $.fn.getForm2obj = function() {
  var _ = {};
  $.map(this.serializeArray(), function(n) {
    const keys = n.name.match(/[a-zA-Z0-9_]+|(?=\[\])/g);
    if (keys.length > 1) {
      let tmp = _;
      pop = keys.pop();
      for (let i = 0; i < keys.length, j = keys[i]; i++) {
        tmp[j] = (!tmp[j] ? (pop == '') ? [] : {} : tmp[j]), tmp = tmp[j];
      }
      if (pop == '') tmp = (!Array.isArray(tmp) ? [] : tmp), tmp.push(n.value);
      else tmp[pop] = n.value;
    } else _[keys.pop()] = n.value;
  });
  return _;
}
  
})(jQuery);
  

</script>
    <?php
    $c = ob_get_contents();
    ob_clean();
    return $c;
}
add_shortcode('signup_form','wooac_signup_form');


 add_action( 'pre_get_posts' , 'products_for_patient' ,99);

  function products_for_patient($query) {


    if (! is_admin() && $query->is_main_query()) {
        $current_user = wp_get_current_user();
        if ($current_user) {
            if (in_array('customer', (array) $current_user->roles)) {
           //     if($current_user->ID==170){
            
                $thc_from = get_user_meta($current_user->ID,'min_thc',true);
                if(empty($thc_from)){
                    $thc_from=0;
                    update_user_meta($current_user->ID,'min_thc',$thc_from);
                }
                
                
                $thc_to = get_user_meta($current_user->ID,'max_thc',true);
                if(empty($thc_to)){
                    $thc_to=0;
                    update_user_meta($current_user->ID,'max_thc',$thc_to);
                }
                
                $cbd_from = get_user_meta($current_user->ID,'min_cbd',true);
                if(empty($cbd_from)){
                    $cbd_from=0;
                    update_user_meta($current_user->ID,'min_cbd',$cbd_from);
                }
                $cbd_to = get_user_meta($current_user->ID,'max_cbd',true);
                if(empty($cbd_to)){
                    $cbd_to=0;
                    update_user_meta($current_user->ID,'max_cbd',$cbd_to);
                }
               /* $thc_from = 70;
                $thc_to = 81;
                $cbd_from = 0;
                $cbd_to = 1;*/
                $is_product = false;
                $product_cat = $query->get( 'product_cat' );
         

                if($product_cat && !empty($product_cat)){
                    $is_product = true;
                }
       
               // $taxonomy
                if(is_post_type_archive('product')){
                    $is_product = true;
                }
                if(in_array ( $query->get('post_type'), array('product') )){
                    $is_product = true;
                }
              //  $is_product = false;
                if( $is_product){
           
                $query->set(
                        'meta_query',
                        array(
                            array(
                                'key' => '_cbd_from',
                                'value' => $cbd_from,
                                'compare' =>'<=',
                                'type'    => 'numeric',
                            ),
                            array(
                                'key' => '_cbd_to',
                                'value' => $cbd_to,
                                'compare' =>'>=',
                                'type'    => 'numeric',
                            ),
                            array(
                                'key' => '_thc_from',
                                'value' => $thc_from,
                                'compare' =>'<=',
                                'type'    => 'numeric',
                            ),
                            array(
                                'key' => '_thc_to',
                                'value' => $thc_to,
                                'compare' =>'>=',
                                'type'    => 'numeric',
                            ) 
                        )
                );
                }
  
             //   }
            }
        }
    }
}
/*
add_action('wp_footer',function(){
   echo 'Query: '.$GLOBALS['wp_query']->request; 
}); */

function check_if_product_allowed(){
        $current_user = wp_get_current_user();
        if ($current_user) {
            if (in_array('customer', (array) $current_user->roles)) {
            //    if($current_user->ID==170){
            
                $thc_from = get_user_meta($current_user->ID,'min_thc',true);
                if(empty($thc_from)){
                    $thc_from=0;
                    update_user_meta($current_user->ID,'min_thc',$thc_from);
                }
                
                
                $thc_to = get_user_meta($current_user->ID,'max_thc',true);
                if(empty($thc_to)){
                    $thc_to=0;
                    update_user_meta($current_user->ID,'max_thc',$thc_to);
                }
                
                $cbd_from = get_user_meta($current_user->ID,'min_cbd',true);
                if(empty($cbd_from)){
                    $cbd_from=0;
                    update_user_meta($current_user->ID,'min_cbd',$cbd_from);
                }
                $cbd_to = get_user_meta($current_user->ID,'max_cbd',true);
                if(empty($cbd_to)){
                    $cbd_to=0;
                    update_user_meta($current_user->ID,'max_cbd',$cbd_to);
                }    
                foreach ( WC()->cart->get_cart() as $cart_item_key => $cart_item ) {
                    $allowed = false;
                    $_cbd_from = get_post_meta($cart_item['product_id'],'_cbd_from',true);
                    $_cbd_to = get_post_meta($cart_item['product_id'],'_cbd_to',true);
                    
                    $_thc_from = get_post_meta($cart_item['product_id'],'_thc_from',true);
                    $_thc_to = get_post_meta($cart_item['product_id'],'_thc_to',true);
                    if(!empty($_cbd_from) && !empty($_cbd_from) && !empty($_thc_from) && !empty($_thc_to)){
                        if($_thc_from>=$thc_from || $_thc_to<=$thc_to || $_cbd_from>=$cbd_from || $_cbd_to<=$cbd_to ){
                            WC()->cart->remove_cart_item( $cart_item_key );
                        }
                    }
                }
            //}
        }
    }
}
add_action('woocommerce_before_checkout_form','check_if_product_allowed');
add_action('woocommerce_before_cart','check_if_product_allowed');